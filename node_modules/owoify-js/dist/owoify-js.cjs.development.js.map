{"version":3,"file":"owoify-js.cjs.development.js","sources":["../src/Word.ts","../src/util/utility.ts","../src/map_functions.ts","../src/presets.ts","../src/index.ts"],"sourcesContent":["import { debug } from './util/logger';\n\nfunction searchValueContainsReplacedWords(\n  searchValue: string,\n  replaceValue: string,\n  replacedWords: Set<String>\n): boolean {\n  return Array.from(replacedWords).some(\n    word => word.replace(searchValue, replaceValue) !== word\n  );\n}\n\nexport default class Word {\n  private word: string;\n  private replacedWords: Set<string>;\n\n  constructor(word: string) {\n    this.word = word.trim();\n    this.replacedWords = new Set();\n  }\n\n  replace(\n    searchValue: any,\n    replaceValue: any,\n    replaceReplacedWords: boolean = false\n  ): Word {\n    if (\n      !replaceReplacedWords &&\n      searchValueContainsReplacedWords(\n        searchValue,\n        replaceValue,\n        this.replacedWords\n      )\n    )\n      return this;\n    const replacingWord: string = this.word\n      .replace(searchValue, replaceValue)\n      .trim();\n    const matchArray: RegExpMatchArray | null = this.word.match(searchValue);\n    const replacedWords: string[] =\n      matchArray !== null\n        ? Array.from(matchArray).map(x => x.replace(x, replaceValue))\n        : [];\n    if (replacingWord !== this.word) {\n      for (const word of replacedWords) {\n        this.replacedWords.add(word);\n      }\n\n      debug(\n        'Replaced \"',\n        this.word,\n        '\" with \"',\n        replacingWord,\n        '\" and replaced subset',\n        this.replacedWords,\n        'with search string:',\n        searchValue\n      );\n\n      this.word = replacingWord;\n    }\n    return this;\n  }\n\n  toString() {\n    return this.word;\n  }\n}\n","/**\n * Interleaves 2 arrays\n * @internal\n * @param a first array\n * @param b second arry\n * @returns array with interleaved elements\n */\nexport function interleaveArrays(a: any[], b: any[]): any[] {\n  let arr: any[] = [];\n  let observed = a;\n  let other = b;\n  let temp: null | any[] = null;\n  while (observed.length > 0) {\n    arr.push(observed.shift());\n    temp = observed;\n    observed = other;\n    other = temp;\n  }\n  if (other.length > 0) arr.push(...other);\n  return arr;\n}\n","import Word from './Word';\n\nconst faces: Array<string> = [\n  '(・`ω´・)',\n  ';;w;;',\n  'owo',\n  'UwU',\n  '>w<',\n  '^w^',\n  '(* ^ ω ^)',\n  '(⌒ω⌒)',\n  'ヽ(*・ω・)ﾉ',\n  '(o´∀`o)',\n  '(o･ω･o)',\n  '＼(＾▽＾)／',\n];\n\nexport const Map_O_To_OwO = (input: Word): Word =>\n  input.replace(/o/g, () => (Math.round(Math.random()) ? 'owo' : 'o'));\nexport const Map_Ew_To_UwU = (input: Word): Word => input.replace(/ew/g, 'uwu');\nexport const Map_Hey_To_Hay = (input: Word): Word =>\n  input.replace(/([Hh])ey/g, '$1ay');\nexport const Map_Dead_To_Ded = (input: Word): Word =>\n  input.replace(/Dead/g, 'Ded').replace(/dead/g, 'ded');\nexport const Map_N_Vowel_T_To_Nd = (input: Word): Word =>\n  input.replace(/n[aeiou]*t/g, 'nd');\nexport const Map_Read_To_Wead = (input: Word): Word =>\n  input.replace(/Read/g, 'Wead').replace(/read/g, 'wead');\n\nexport const Map_Brackets_To_StarTrails = (input: Word): Word =>\n  input\n    .replace(/[({<]/g, '｡･:*:･ﾟ★,｡･:*:･ﾟ☆')\n    .replace(/[)}>]/g, '☆ﾟ･:*:･｡,★ﾟ･:*:･｡');\nexport const Map_PeriodCommaExclamationSemicolon_To_Kaomojis = (\n  input: Word\n): Word =>\n  input\n    .replace(\n      /[.,](?![0-9])/g,\n      () => ' ' + faces[Math.floor(Math.random() * faces.length)]\n    )\n    .replace(\n      /[!;]+/g,\n      () => ' ' + faces[Math.floor(Math.random() * faces.length)]\n    );\nexport const Map_That_To_Dat = (input: Word): Word =>\n  input.replace(/that/g, 'dat').replace(/That/g, 'Dat');\nexport const Map_Th_To_F = (input: Word): Word =>\n  input.replace(/[Tt]h(?![Ee])/g, 'f').replace(/TH(?!E)/g, 'F');\nexport const Map_Le_To_Wal = (input: Word): Word =>\n  input.replace(/le$/g, 'wal');\nexport const Map_Ve_To_We = (input: Word): Word =>\n  input.replace(/ve/g, 'we').replace(/Ve/g, 'We');\nexport const Map_Ry_To_Wwy = (input: Word): Word => input.replace(/ry/g, 'wwy');\nexport const Map_ROrL_To_W = (input: Word): Word =>\n  input.replace(/(?:r|l)/g, 'w').replace(/(?:R|L)/g, 'W');\n\nexport const Map_Ll_To_Ww = (input: Word): Word => input.replace(/ll/g, 'ww');\nexport const Map_VowelOrRExceptO_L_To_Wl = (input: Word): Word =>\n  input.replace(/[aeiur]l$/g, 'wl').replace(/[AEIUR]([lL])$/g, 'W$1');\nexport const Map_Old_To_Owld = (input: Word): Word =>\n  input.replace(/([Oo])ld/g, '$1wld').replace(/OLD/g, 'OWLD');\nexport const Map_Ol_To_Owl = (input: Word): Word =>\n  input.replace(/([Oo])l/g, '$1wl').replace(/OL/g, 'OWL');\nexport const Map_LOrR_O_To_Wo = (input: Word): Word =>\n  input.replace(/[lr]o/g, 'wo').replace(/[LR]([oO])/g, 'W$1');\nexport const Map_SpecificConsonants_O_To_Letter_And_Wo = (input: Word): Word =>\n  input\n    .replace(/([bcdfghjkmnpqstxyz])o/g, '$1wo')\n    .replace(\n      /([BCDFGHJKMNPQSTXYZ])([oO])/g,\n      (_: any, m1: string, m2: string) =>\n        m1 + (m2.toUpperCase() === m2 ? 'W' : 'w') + m2\n    );\nexport const Map_VOrW_Le_To_Wal = (input: Word): Word =>\n  input.replace(/[vw]le/g, 'wal');\nexport const Map_Fi_To_Fwi = (input: Word): Word =>\n  input.replace(/([Ff])i/g, '$1wi').replace(/FI/g, 'FWI');\nexport const Map_Ver_To_Wer = (input: Word): Word =>\n  input.replace(/([Vv])er/g, 'wer');\nexport const Map_Poi_To_Pwoi = (input: Word): Word =>\n  input.replace(/([Pp])oi/g, '$1woi');\nexport const Map_SpecificConsonants_Le_To_Letter_And_Wal = (\n  input: Word\n): Word => input.replace(/([DdFfGgHhJjPpQqRrSsTtXxYyZz])le$/g, '$1wal');\nexport const Map_Consonant_R_To_Consonant_W = (input: Word): Word =>\n  input.replace(/([BbCcDdFfGgKkPpQqSsTtWwXxZz])r/g, '$1w');\nexport const Map_Ly_To_Wy = (input: Word): Word =>\n  input.replace(/ly/g, 'wy').replace(/Ly/g, 'Wy');\nexport const Map_Ple_To_Pwe = (input: Word): Word =>\n  input.replace(/([Pp])le/g, '$1we');\nexport const Map_Nr_To_Nw = (input: Word): Word =>\n  input.replace(/([Nn])r/g, '$1w').replace(/NR/g, 'NW');\nexport const Map_Mem_To_Mwem = (input: Word): Word =>\n  input.replace(/Mem/g, 'mwem').replace(/mem/g, 'Mwem');\nexport const Unmap_Nywo_To_Nyo = (input: Word): Word =>\n  input.replace(/([Nn])ywo/g, '$1yo', true);\n\nexport const Map_Fuc_To_Fwuc = (input: Word): Word =>\n  input.replace(/([Ff])uc/g, '$1wuc');\nexport const Map_Mom_To_Mwom = (input: Word): Word =>\n  input.replace(/([Mm])om/g, '$1wom');\nexport const Map_Me_To_Mwe = (input: Word): Word =>\n  input.replace(/^Me$/g, 'Mwe').replace(/^me$/g, 'mwe');\nexport const Map_NVowel_To_Ny = (input: Word): Word =>\n  input\n    .replace(/n([aeiou])/g, 'ny$1')\n    .replace(/N([aeiou])/g, 'Ny$1')\n    .replace(/N([AEIOU])/g, 'NY$1');\nexport const Map_Ove_To_Uv = (input: Word): Word =>\n  input.replace(/ove/g, 'uv').replace(/OVE/g, 'UV');\nexport const Map_Haha_To_HehexD = (input: Word): Word =>\n  input.replace(/\\b(ha|hah|heh|hehe)+\\b/g, 'hehe xD');\nexport const Map_The_To_Teh = (input: Word): Word =>\n  input.replace(/\\b([Tt])he\\b/g, '$1eh');\nexport const Map_You_To_U = (input: Word): Word =>\n  input.replace(/\\bYou\\b/g, 'U').replace(/\\byou\\b/g, 'u');\nexport const Map_Time_To_Tim = (input: Word): Word =>\n  input.replace(/\\b([Tt])ime\\b/g, '$1im');\nexport const Map_Over_To_Owor = (input: Word): Word =>\n  input.replace(/([Oo])ver/g, '$1wor');\nexport const Map_Worse_To_Wose = (input: Word): Word =>\n  input.replace(/([Ww])orse/g, '$1ose');\nexport const Map_Great_To_Gwate = (input: Word): Word =>\n  input.replace(/([Gg])reat/g, '$1wate');\nexport const Map_Aviat_To_Awiat = (input: Word): Word =>\n  input.replace(/([Aa])viat/g, '$1wiat');\nexport const Map_Dedicat_To_Deditat = (input: Word): Word =>\n  input.replace(/([Dd])edicat/g, '$1editat');\nexport const Map_Remember_To_Rember = (input: Word): Word =>\n  input.replace(/([Rr])emember/g, '$1ember');\nexport const Map_When_To_Wen = (input: Word): Word =>\n  input.replace(/([Ww])hen/g, '$1en');\nexport const Map_Frightened_To_Frigten = (input: Word): Word =>\n  input.replace(/([Ff])righten(ed)*/g, '$1rigten');\nexport const Map_Meme_To_Mem = (input: Word): Word =>\n  input.replace(/Meme/g, 'mem').replace(/Mem/g, 'Mem');\nexport const Map_Feel_To_Fell = (input: Word): Word =>\n  input.replace(/^([Ff])eel$/g, '$1ell');\n","import * as f from './map_functions';\nimport Word from './Word';\n\nexport const specificWordMappingArray: Array<(str: Word) => Word> = [\n  f.Map_Fuc_To_Fwuc,\n  f.Map_Mom_To_Mwom,\n  f.Map_Time_To_Tim,\n  f.Map_Me_To_Mwe,\n  f.Map_Over_To_Owor,\n  f.Map_Ove_To_Uv,\n  f.Map_Haha_To_HehexD,\n  f.Map_The_To_Teh,\n  f.Map_You_To_U,\n  f.Map_Read_To_Wead,\n  f.Map_Worse_To_Wose,\n  f.Map_Great_To_Gwate,\n  f.Map_Aviat_To_Awiat,\n  f.Map_Dedicat_To_Deditat,\n  f.Map_Remember_To_Rember,\n  f.Map_When_To_Wen,\n  f.Map_Frightened_To_Frigten,\n  f.Map_Meme_To_Mem,\n  f.Map_Feel_To_Fell,\n];\nexport const uvuMappingArray: Array<(str: Word) => Word> = [\n  f.Map_O_To_OwO,\n  f.Map_Ew_To_UwU,\n  f.Map_Hey_To_Hay,\n  f.Map_Dead_To_Ded,\n  f.Map_N_Vowel_T_To_Nd,\n];\nexport const uwuMappingArray: Array<(str: Word) => Word> = [\n  f.Map_Brackets_To_StarTrails,\n  f.Map_PeriodCommaExclamationSemicolon_To_Kaomojis,\n  f.Map_That_To_Dat,\n  f.Map_Th_To_F,\n  f.Map_Le_To_Wal,\n  f.Map_Ve_To_We,\n  f.Map_Ry_To_Wwy,\n  f.Map_ROrL_To_W,\n];\nexport const owoMappingArray: Array<(str: Word) => Word> = [\n  f.Map_NVowel_To_Ny,\n  f.Map_Ll_To_Ww,\n  f.Map_VowelOrRExceptO_L_To_Wl,\n  f.Map_Old_To_Owld,\n  f.Map_Ol_To_Owl,\n  f.Map_LOrR_O_To_Wo,\n  f.Map_SpecificConsonants_O_To_Letter_And_Wo,\n  f.Map_VOrW_Le_To_Wal,\n  f.Map_Fi_To_Fwi,\n  f.Map_Ver_To_Wer,\n  f.Map_Poi_To_Pwoi,\n  f.Map_SpecificConsonants_Le_To_Letter_And_Wal,\n  f.Map_Consonant_R_To_Consonant_W,\n  f.Map_Ly_To_Wy,\n  f.Map_Ple_To_Pwe,\n  f.Map_Nr_To_Nw,\n  f.Map_Mem_To_Mwem,\n  f.Unmap_Nywo_To_Nyo,\n];\n","import Word from './Word';\nimport { interleaveArrays } from './util/utility';\nimport {\n  uwuMappingArray,\n  owoMappingArray,\n  uvuMappingArray,\n  specificWordMappingArray,\n} from './presets';\n\n/**\n * owoify everything\n * @param v word to owoify\n * @param level level of owo-ness. (owo -> uwu -> uvu)\n */\nexport default function owoify(v: string, level: string = 'owo'): string {\n  let whitespace: string[] = v.split(/[^\\s]+/g);\n  let words: Word[] = v.split(/\\s+/g).map(x => new Word(x));\n  words = words.map(x => {\n    specificWordMappingArray.reduce((word, f) => f(word), x);\n    switch (level) {\n      case 'uvu':\n        uvuMappingArray.reduce((word, f) => f(word), x);\n      case 'uwu':\n        uwuMappingArray.reduce((word, f) => f(word), x);\n      case 'owo':\n        owoMappingArray.reduce((word, f) => f(word), x);\n      default:\n        break;\n    }\n    return x;\n  });\n  return interleaveArrays(whitespace, words).join('');\n}\n\nexport function uwuify(v: string): string {\n  return owoify(v, 'uwu');\n}\n\nexport function uvuify(v: string): string {\n  return owoify(v, 'uvu');\n}\n"],"names":["searchValueContainsReplacedWords","searchValue","replaceValue","replacedWords","Array","from","some","word","replace","Word","trim","Set","replaceReplacedWords","replacingWord","matchArray","match","map","x","add","toString","interleaveArrays","a","b","arr","observed","other","temp","length","push","shift","faces","Map_O_To_OwO","input","Math","round","random","Map_Ew_To_UwU","Map_Hey_To_Hay","Map_Dead_To_Ded","Map_N_Vowel_T_To_Nd","Map_Read_To_Wead","Map_Brackets_To_StarTrails","Map_PeriodCommaExclamationSemicolon_To_Kaomojis","floor","Map_That_To_Dat","Map_Th_To_F","Map_Le_To_Wal","Map_Ve_To_We","Map_Ry_To_Wwy","Map_ROrL_To_W","Map_Ll_To_Ww","Map_VowelOrRExceptO_L_To_Wl","Map_Old_To_Owld","Map_Ol_To_Owl","Map_LOrR_O_To_Wo","Map_SpecificConsonants_O_To_Letter_And_Wo","_","m1","m2","toUpperCase","Map_VOrW_Le_To_Wal","Map_Fi_To_Fwi","Map_Ver_To_Wer","Map_Poi_To_Pwoi","Map_SpecificConsonants_Le_To_Letter_And_Wal","Map_Consonant_R_To_Consonant_W","Map_Ly_To_Wy","Map_Ple_To_Pwe","Map_Nr_To_Nw","Map_Mem_To_Mwem","Unmap_Nywo_To_Nyo","Map_Fuc_To_Fwuc","Map_Mom_To_Mwom","Map_Me_To_Mwe","Map_NVowel_To_Ny","Map_Ove_To_Uv","Map_Haha_To_HehexD","Map_The_To_Teh","Map_You_To_U","Map_Time_To_Tim","Map_Over_To_Owor","Map_Worse_To_Wose","Map_Great_To_Gwate","Map_Aviat_To_Awiat","Map_Dedicat_To_Deditat","Map_Remember_To_Rember","Map_When_To_Wen","Map_Frightened_To_Frigten","Map_Meme_To_Mem","Map_Feel_To_Fell","specificWordMappingArray","f","uvuMappingArray","uwuMappingArray","owoMappingArray","owoify","v","level","whitespace","split","words","reduce","join","uwuify","uvuify"],"mappings":"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"}